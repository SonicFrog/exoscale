/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://bump.sh/doc/exoscale-api.json) * [YAML format](https://bump.sh/doc/exoscale-api.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DbaasServiceKafkaComponentsInner {
    /// Service component name
    #[serde(rename = "component")]
    pub component: String,
    /// DNS name for connecting to the service component
    #[serde(rename = "host")]
    pub host: String,
    #[serde(
        rename = "kafka-authentication-method",
        skip_serializing_if = "Option::is_none"
    )]
    pub kafka_authentication_method: Option<crate::models::EnumKafkaAuthMethod>,
    /// Port number for connecting to the service component
    #[serde(rename = "port")]
    pub port: i64,
    #[serde(rename = "route")]
    pub route: crate::models::EnumComponentRoute,
    #[serde(rename = "usage")]
    pub usage: crate::models::EnumComponentUsage,
}

impl DbaasServiceKafkaComponentsInner {
    pub fn new(
        component: String,
        host: String,
        port: i64,
        route: crate::models::EnumComponentRoute,
        usage: crate::models::EnumComponentUsage,
    ) -> DbaasServiceKafkaComponentsInner {
        DbaasServiceKafkaComponentsInner {
            component,
            host,
            kafka_authentication_method: None,
            port,
            route,
            usage,
        }
    }
}
