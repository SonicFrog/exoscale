/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://bump.sh/doc/exoscale-api.json) * [YAML format](https://bump.sh/doc/exoscale-api.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

/// DbaasServiceType : DBaaS service

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DbaasServiceType {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// DbaaS service available versions
    #[serde(rename = "available-versions", skip_serializing_if = "Option::is_none")]
    pub available_versions: Option<Vec<String>>,
    /// DbaaS service default version
    #[serde(rename = "default-version", skip_serializing_if = "Option::is_none")]
    pub default_version: Option<String>,
    /// DbaaS service description
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// DbaaS service plans
    #[serde(rename = "plans", skip_serializing_if = "Option::is_none")]
    pub plans: Option<Vec<crate::models::DbaasPlan>>,
}

impl DbaasServiceType {
    /// DBaaS service
    pub fn new() -> DbaasServiceType {
        DbaasServiceType {
            name: None,
            available_versions: None,
            default_version: None,
            description: None,
            plans: None,
        }
    }
}
