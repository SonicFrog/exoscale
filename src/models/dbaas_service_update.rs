/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://bump.sh/doc/exoscale-api.json) * [YAML format](https://bump.sh/doc/exoscale-api.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

/// DbaasServiceUpdate : Update waiting to be installed

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DbaasServiceUpdate {
    /// Description of the update
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Deadline for installing the update
    #[serde(rename = "deadline", skip_serializing_if = "Option::is_none")]
    pub deadline: Option<String>,
    /// The earliest time the update will be automatically applied
    #[serde(rename = "start-after", skip_serializing_if = "Option::is_none")]
    pub start_after: Option<String>,
    /// The time when the update will be automatically applied
    #[serde(rename = "start-at", skip_serializing_if = "Option::is_none")]
    pub start_at: Option<String>,
}

impl DbaasServiceUpdate {
    /// Update waiting to be installed
    pub fn new() -> DbaasServiceUpdate {
        DbaasServiceUpdate {
            description: None,
            deadline: None,
            start_after: None,
            start_at: None,
        }
    }
}
