/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://bump.sh/doc/exoscale-api.json) * [YAML format](https://bump.sh/doc/exoscale-api.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

/// SksKubeconfigRequest : Kubeconfig request for a SKS cluster

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SksKubeconfigRequest {
    /// Validity in seconds of the Kubeconfig user certificate (default: 30 days)
    #[serde(rename = "ttl", skip_serializing_if = "Option::is_none")]
    pub ttl: Option<i64>,
    /// User name in the generated Kubeconfig. The certificate present in the Kubeconfig will also have this name set for the CN field.
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<String>,
    /// List of roles. The certificate present in the Kubeconfig will have these roles set in the Org field.
    #[serde(rename = "groups", skip_serializing_if = "Option::is_none")]
    pub groups: Option<Vec<String>>,
}

impl SksKubeconfigRequest {
    /// Kubeconfig request for a SKS cluster
    pub fn new() -> SksKubeconfigRequest {
        SksKubeconfigRequest {
            ttl: None,
            user: None,
            groups: None,
        }
    }
}
