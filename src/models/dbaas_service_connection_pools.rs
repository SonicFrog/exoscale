/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://bump.sh/doc/exoscale-api.json) * [YAML format](https://bump.sh/doc/exoscale-api.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

/// DbaasServiceConnectionPools : PostgreSQL PGBouncer connection pools

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DbaasServiceConnectionPools {
    /// Connection URI for the DB pool
    #[serde(rename = "connection-uri")]
    pub connection_uri: String,
    /// Service database name
    #[serde(rename = "database")]
    pub database: String,
    /// PGBouncer pool mode
    #[serde(rename = "pool-mode")]
    pub pool_mode: PoolMode,
    /// Connection pool name
    #[serde(rename = "pool-name")]
    pub pool_name: String,
    /// Size of PGBouncer's PostgreSQL side connection pool
    #[serde(rename = "pool-size")]
    pub pool_size: i64,
    /// Pool username
    #[serde(rename = "username")]
    pub username: String,
}

impl DbaasServiceConnectionPools {
    /// PostgreSQL PGBouncer connection pools
    pub fn new(
        connection_uri: String,
        database: String,
        pool_mode: PoolMode,
        pool_name: String,
        pool_size: i64,
        username: String,
    ) -> DbaasServiceConnectionPools {
        DbaasServiceConnectionPools {
            connection_uri,
            database,
            pool_mode,
            pool_name,
            pool_size,
            username,
        }
    }
}

/// PGBouncer pool mode
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PoolMode {
    #[serde(rename = "transaction")]
    Transaction,
    #[serde(rename = "statement")]
    Statement,
    #[serde(rename = "session")]
    Session,
}

impl Default for PoolMode {
    fn default() -> PoolMode {
        Self::Transaction
    }
}
