/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://bump.sh/doc/exoscale-api.json) * [YAML format](https://bump.sh/doc/exoscale-api.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GetDbaasTask200Response {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "create-time", skip_serializing_if = "Option::is_none")]
    pub create_time: Option<String>,
    #[serde(rename = "result", skip_serializing_if = "Option::is_none")]
    pub result: Option<String>,
    #[serde(rename = "result-codes", skip_serializing_if = "Option::is_none")]
    pub result_codes: Option<Vec<crate::models::GetDbaasTask200ResponseResultCodesInner>>,
    #[serde(rename = "success", skip_serializing_if = "Option::is_none")]
    pub success: Option<bool>,
    #[serde(rename = "task-type", skip_serializing_if = "Option::is_none")]
    pub task_type: Option<String>,
}

impl GetDbaasTask200Response {
    pub fn new() -> GetDbaasTask200Response {
        GetDbaasTask200Response {
            id: None,
            create_time: None,
            result: None,
            result_codes: None,
            success: None,
            task_type: None,
        }
    }
}
