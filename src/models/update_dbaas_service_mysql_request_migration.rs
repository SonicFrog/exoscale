/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://bump.sh/doc/exoscale-api.json) * [YAML format](https://bump.sh/doc/exoscale-api.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

/// UpdateDbaasServiceMysqlRequestMigration : Migrate data from existing server

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UpdateDbaasServiceMysqlRequestMigration {
    /// Hostname or IP address of the server where to migrate data from
    #[serde(rename = "host")]
    pub host: String,
    /// Port number of the server where to migrate data from
    #[serde(rename = "port")]
    pub port: i64,
    /// Password for authentication with the server where to migrate data from
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
    /// The server where to migrate data from is secured with SSL
    #[serde(rename = "ssl", skip_serializing_if = "Option::is_none")]
    pub ssl: Option<bool>,
    /// User name for authentication with the server where to migrate data from
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    /// Database name for bootstrapping the initial connection
    #[serde(rename = "dbname", skip_serializing_if = "Option::is_none")]
    pub dbname: Option<String>,
    /// Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)
    #[serde(rename = "ignore-dbs", skip_serializing_if = "Option::is_none")]
    pub ignore_dbs: Option<String>,
    #[serde(rename = "method", skip_serializing_if = "Option::is_none")]
    pub method: Option<crate::models::EnumMigrationMethod>,
}

impl UpdateDbaasServiceMysqlRequestMigration {
    /// Migrate data from existing server
    pub fn new(host: String, port: i64) -> UpdateDbaasServiceMysqlRequestMigration {
        UpdateDbaasServiceMysqlRequestMigration {
            host,
            port,
            password: None,
            ssl: None,
            username: None,
            dbname: None,
            ignore_dbs: None,
            method: None,
        }
    }
}
