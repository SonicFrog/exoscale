/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://bump.sh/doc/exoscale-api.json) * [YAML format](https://bump.sh/doc/exoscale-api.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DbaasServicePgConnectionPoolsInner {
    /// Connection URI for the DB pool
    #[serde(rename = "connection-uri")]
    pub connection_uri: String,
    #[serde(rename = "database")]
    pub database: String,
    #[serde(rename = "mode")]
    pub mode: crate::models::EnumPgPoolMode,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "size")]
    pub size: i64,
    #[serde(rename = "username")]
    pub username: String,
}

impl DbaasServicePgConnectionPoolsInner {
    pub fn new(
        connection_uri: String,
        database: String,
        mode: crate::models::EnumPgPoolMode,
        name: String,
        size: i64,
        username: String,
    ) -> DbaasServicePgConnectionPoolsInner {
        DbaasServicePgConnectionPoolsInner {
            connection_uri,
            database,
            mode,
            name,
            size,
            username,
        }
    }
}
