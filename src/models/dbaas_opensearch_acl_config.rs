/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://bump.sh/doc/exoscale-api.json) * [YAML format](https://bump.sh/doc/exoscale-api.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DbaasOpensearchAclConfig {
    #[serde(rename = "acls", skip_serializing_if = "Option::is_none")]
    pub acls: Option<Vec<crate::models::DbaasOpensearchAcl>>,
    /// Enable OpenSearch ACLs. When disabled authenticated service users have unrestricted access.
    #[serde(rename = "acl-enabled", skip_serializing_if = "Option::is_none")]
    pub acl_enabled: Option<bool>,
    /// Enable to enforce index rules in a limited fashion for requests that use the _mget, _msearch, and _bulk APIs
    #[serde(
        rename = "extended-acl-enabled",
        skip_serializing_if = "Option::is_none"
    )]
    pub extended_acl_enabled: Option<bool>,
}

impl DbaasOpensearchAclConfig {
    pub fn new() -> DbaasOpensearchAclConfig {
        DbaasOpensearchAclConfig {
            acls: None,
            acl_enabled: None,
            extended_acl_enabled: None,
        }
    }
}
