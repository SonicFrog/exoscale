/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://bump.sh/doc/exoscale-api.json) * [YAML format](https://bump.sh/doc/exoscale-api.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

/// DbaasServiceUserAccessControl : Service specific access controls for user

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DbaasServiceUserAccessControl {
    /// Command category rules
    #[serde(
        rename = "redis-acl-categories",
        skip_serializing_if = "Option::is_none"
    )]
    pub redis_acl_categories: Option<Vec<String>>,
    /// Rules for individual commands
    #[serde(rename = "redis-acl-commands", skip_serializing_if = "Option::is_none")]
    pub redis_acl_commands: Option<Vec<String>>,
    /// Key access rules
    #[serde(rename = "redis-acl-keys", skip_serializing_if = "Option::is_none")]
    pub redis_acl_keys: Option<Vec<String>>,
}

impl DbaasServiceUserAccessControl {
    /// Service specific access controls for user
    pub fn new() -> DbaasServiceUserAccessControl {
        DbaasServiceUserAccessControl {
            redis_acl_categories: None,
            redis_acl_commands: None,
            redis_acl_keys: None,
        }
    }
}
