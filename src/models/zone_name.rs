/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://bump.sh/doc/exoscale-api.json) * [YAML format](https://bump.sh/doc/exoscale-api.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ZoneName {
    #[serde(rename = "ch-dk-2")]
    ChDk2,
    #[serde(rename = "de-muc-1")]
    DeMuc1,
    #[serde(rename = "ch-gva-2")]
    ChGva2,
    #[serde(rename = "at-vie-1")]
    AtVie1,
    #[serde(rename = "de-fra-1")]
    DeFra1,
    #[serde(rename = "bg-sof-1")]
    BgSof1,
}

impl ToString for ZoneName {
    fn to_string(&self) -> String {
        match self {
            Self::ChDk2 => String::from("ch-dk-2"),
            Self::DeMuc1 => String::from("de-muc-1"),
            Self::ChGva2 => String::from("ch-gva-2"),
            Self::AtVie1 => String::from("at-vie-1"),
            Self::DeFra1 => String::from("de-fra-1"),
            Self::BgSof1 => String::from("bg-sof-1"),
        }
    }
}

impl Default for ZoneName {
    fn default() -> ZoneName {
        Self::ChDk2
    }
}
