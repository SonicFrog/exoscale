/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://bump.sh/doc/exoscale-api.json) * [YAML format](https://bump.sh/doc/exoscale-api.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

/// DeployTarget : Deploy target

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DeployTarget {
    /// Deploy Target ID
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Deploy Target name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Deploy Target type
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    /// Deploy Target description
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
}

impl DeployTarget {
    /// Deploy target
    pub fn new() -> DeployTarget {
        DeployTarget {
            id: None,
            name: None,
            _type: None,
            description: None,
        }
    }
}

/// Deploy Target type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "edge")]
    Edge,
    #[serde(rename = "dedicated")]
    Dedicated,
}

impl Default for Type {
    fn default() -> Type {
        Self::Edge
    }
}
